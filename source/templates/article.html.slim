---
layout: layout
ogType: article
page_classes: "work"
---

scss:
    //:root {
    //    //--bg: var(--bg-#{article.theme.class_name});
    //}
    //.masthead, footer {
    //    background-color: var(--bg);
    //}
    //footer a {
    //    --link-color: var(--color-blue);
    //    --link-hover: var(--color-blue-dark);
    //}

- set_meta_tags title: "#{article.title} | Case Study", full_title: false, pull_image: 'foo.jpg'
= partial "partials/json-ld", :locals => { :type => "person" }
- bg_theme = (article.theme.nil? ? nil : "bg-#{article.theme.class_name}")
- entry_id = article.id
- content_for(:head) do
    = dato_meta_tags(article)
/ .pad.bg-orange.text-sm
    pre = article.seo_settings.to_hash
    / img src=article.seo_settings.image.url(w: 1000, auto: :compress)
main.relative.w-full class=bg_theme id="top"
    / - article = locals[:item]
    header.masthead.pad class=""
        .w-full
            nav class="flex flex-row justify-start items-center mb-4"
                a href="/" title="Home"
                    = inline_svg "easel-logo.svg", class: "logo inline-block h-12 mr-4 w-auto"
                a.subhead.text-lg.mr-2 href="/#work" title="Work" Work
            / h3.text-xl.font-bold.subhead.separator-arrow Case Studies
            h1.text-4xl-scale.font-regular.font-serif.leading-none.mb-4 = article.title
            h4.text-lg.font-serif.font-light.italic.mb-12 = (article.subheader.nil? ? nil : article.subheader )
        .max-w-7xl class="flex flex-col lg:flex-row"
            - unless article.intro.nil?
                .w-full class="lg:w-2/3"
                    .lead.markdown.pr-0 class="lg:pr-6"
                        = Kramdown::Document.new(article.intro).to_html
            .w-full class="lg:w-1/3"
                - unless article.types.nil?
                    .mb-4
                        - article.types.each do | work_type |
                            span.pill.mr-2.opacity-75 = work_type.title 
                details.toc.hidden class="lg:block"
                    summary.toc-title.text-lg.font-serif.mb-4.tracking-wide Table of Contents
                    ul.ml-5.toc-list.text-sm
                        - article.blocks.each do | block |
                            / li = block.try(:block_title).nil?
                            - if defined?(block.block_title)
                                li.mb-3.leading-tight
                                    a href="##{block.id}" title="Jump to section" = block.block_title
        / - unless article.cover_image.nil?
            .w-full.bg-cover.lozad class="h-64 md:w-1/3 xl:w-1/2 md:h-auto order-1 md:order-2" data-background-image=(article.cover_image.url(w: 1200, fm: :jpg))
                / = partial "partials/inline-picture", :locals => { :the_img => a
    //- mobile version
    details.toc.sticky.top-0.left-0.bg-blur-light.pt-3.px-2.pb-1.z-20.shadow-lg.outline-none class="lg:hidden"
        / = inline_svg "easel-logo.svg", class: "icon-inline mr-1"
        summary.toc-title.text-lg.font-serif.mb-2.tracking-wide.leading-tight.text-blue.outline-none title="Table of Contents"
            / = inline_svg "icon-list.svg", class: "icon-inline mr-1"
            / div class="subhead font-cond text-sm mb-0 opacity-75" Case Study
            = article.title
        ul.ml-5.toc-list
            / li.mb-3.leading-tight.font-serif.text-lg class="lg:hidden"
                a.toc-link href="#top" title="Top" = article.title
            - article.blocks.each do | block |
                / li = block.try(:block_title).nil?
                - if defined?(block.block_title)
                    li.mb-3.leading-tight
                        a.toc-link href="##{block.id}" title="Jump to section" = block.block_title

    - article.blocks.each do | block |
        - case block.item_type.api_key
            - when "section_header"
                section.content-block.block-section-header.pad style="padding-bottom: 0;" id=block.id
                    h3.section-header = block.title
            - when "image_caption"
                section.content-block.block-image.relative.max-w-7xl.mx-auto.pad id=block.id
                    figure
                        = partial "partials/inline-picture", :locals => { :the_img => block.image, :classes => '' }
                        - unless block.caption.nil?
                            figcaption.mt-12
                                - unless block.block_title.empty?
                                    h3.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                                .markdown.line-length
                                    = Kramdown::Document.new(block.caption).to_html
            - when "gallery_block"
                section.content-block.block-gallery.relative.w-full.pad class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    - unless block.block_title.empty?
                        h3.mx-auto.text-3xl-scale.font-sans.font-medium.leading-tight.mb-3 class="lg:mb-8" = block.block_title
                    
                    ruby:
                        case block.gallery.count
                            when 0..3
                                columns = "gallery-cols-2"
                                colspan = "gallery-item-span"
                            when 4..9
                                columns = "gallery-cols-3"
                                colspan = nil
                            when 10..99
                                columns = "gallery-cols-4"
                                colspan = "gallery-item-span"
                        end
                    
                    .gallery-container.mx-auto class=columns
                        - unless block.desc.empty?
                            .gallery-item.rounded-none class=colspan
                                / p = block.gallery.count
                                //- code = block.item_type.api_key
                                .text-lg.font-sans.font-light.mb-3.pr-3.pb-2.markdown.max-w-3xl = Kramdown::Document.new(block.desc).to_html
                        - block.gallery.each do | gallery_item |
                            figure.gallery-item
                                img.lozad.zoomable.rounded-scale src=gallery_item.url(w: 1000, blur: 320, auto: :compress) data-src=gallery_item.url(w: 1000, auto: :compress) data-zoom-src=gallery_item.url(w: 2400, auto: :compress) alt="" width=gallery_item.width height=gallery_item.height /
                                - unless gallery_item.nil? && gallery_item.empty?
                                    figcaption class="px-1 py-3 font-sans font-light italic leading-tight" = gallery_item.title
                            / = partial "partials/gallery-picture", :locals => { :the_img => gallery_item, :classes => '' }
            - when "quote_large"
                aside.content-block.block-quote.relative.w-full.pad-y-xl class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    / code = block.item_type.api_key
                    .text-4xl-scale.font-serif.font-light class=(block.quote_color.nil? ? nil : "text-#{block.quote_color.class_name}") = block.quote_body
            - when "text_block"
                section.content-block.block-text.relative.w-full.pad class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    / code = block.item_type.api_key
                    - unless block.inline_image.nil?
                        .mx-auto.max-w-5xl.flex.justify-center.items-center class="flex-col lg:flex-row"
                            .w-full.mb-4.pb-2 class="lg:w-1/2 lg:pr-12"
                                - unless block.block_title.empty?
                                    h3.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                                .markdown.lead.font-light = Kramdown::Document.new(block.block_body).to_html
                            .w-full.mb-4 class="lg:w-1/2"
                                = partial "partials/inline-picture", :locals => { :the_img => block.inline_image, :classes => '' }
                    - else
                        .mx-auto.max-w-2xl
                            - unless block.block_title.empty?
                                h3.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                            .markdown.lead = Kramdown::Document.new(block.block_body).to_html
            - when "video_block"
                section.content-block.block-video.relative.w-full.pad class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    .mx-auto.max-w-7xl.flex.justify-center.items-center class="flex-col lg:flex-row"
                        - if block.block_title.present? || block.video_caption.present?
                            .w-full.mb-4 class="lg:w-1/3 lg:pr-8"
                                - unless block.block_title.empty?
                                    h3.text-2xl.font-sans.font-medium.leading-tight.mb-2 = block.block_title
                                - unless block.video_caption.empty?
                                    .markdown.lead.max-w-xl.font-light = Kramdown::Document.new(block.video_caption).to_html
                        .w-full.mb-4 class="lg:w-2/3"
                            - unless block.video_file.nil?
                                = partial "partials/video-file", :locals => { :video_file => block.video_file, :classes => '', :attr => '' }
                            - else
                                - unless block.video.nil?
                                    / img src=block.video.thumbnail_url
                                    - embed_url = "https://www.youtube.com/embed/" + block.video.provider_uid
                                    .div class="embed-responsive aspect-ratio-16/9"
                                        iframe.embed-responsive-item allow=("accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture") allowfullscreen="" frameborder="0" height=block.video.height src=embed_url width=block.video.width
                                - unless block.media_embed.nil?
                                    = Kramdown::Document.new(block.media_embed).to_html
// .lozad.bg-cover data-background-image="#{article.cover_image.url}?w=1800&h=900&auto=compress&gam=80&exp=-2&sat=0&duotone=2B3652,FF6746&duotone-alpha=100&blur=50&fit=crop&crop=edges"
section.cta-section.mx-auto.text-center.pad class=bg_theme
    = partial "partials/cta", :locals => { :current_entry => article.id }
section#recent.relative.z-20.w-full.pad class=bg_theme
    .max-w-7xl.mx-auto
        div class="text-lg font-bold subhead md:ml-6 text-gray-500" Recent
        h2.font-serif.font-light.text-4xl-scale.leading-none.mb-2.theme-alt class="md:mb-6 md:ml-6" Case Studies
        .flex.flex-col.justify-start.items-start class="md:flex-row flex-wrap"
            / = partial "partials/recent-work-list"
        - dato.works.each do | work |
            - if entry_id != work.id
                a.card-hover.project-card.project-card-compact class="w-full lg:w-1/2 xxl:w-1/3 max-w-2xl" href="/work/#{work.slug}" title=work.title
                    .flex.flex-row.justify-start.items-start class="sm:items-center"
                        - unless work.cover_image.nil?
                            img.lozad.rounded.mr-3 class="md:mr-4 w-1/4" src=work.cover_image.url(w: 300, h: 300, blur:200, fit: :crop, crop: :edges, auto: :compress) data-src=work.cover_image.url(w: 300, h: 300, fit: :crop, crop: :edges, auto: :compress)
                        div class="w-3/4"
                            h3.text-base.font-sans.font-medium.leading-tight.mb-2 class="md:leading-snug md:text-xl" = work.title
                            h4.text-sm.font-sans.font-light.leading-tight.italic class="md:leading-snug md:text-lg" = (work.subheader.nil? ? nil : work.subheader )

footer.relative.w-full.pad
    = partial "partials/footer-links"