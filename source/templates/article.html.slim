---
layout: layout
ogType: article
page_classes: "work"
---

scss:
    //:root {
    //    //--bg: var(--bg-#{article.theme.class_name});
    //}
    //.masthead, footer {
    //    background-color: var(--bg);
    //}
    //footer a {
    //    --link-color: var(--color-blue);
    //    --link-hover: var(--color-blue-dark);
    //}

- set_meta_tags title: "#{article.title} | Case Study", full_title: false, pull_image: 'foo.jpg'
= partial "partials/json-ld", :locals => { :type => "person" }
- bg_theme = (article.theme.nil? ? nil : "bg-#{article.theme.class_name}")

- content_for(:head) do
    = dato_meta_tags(article)
/ .pad.bg-orange.text-sm
    pre = article.seo_settings.to_hash
    / img src=article.seo_settings.image.url(w: 1000, auto: :compress)
main.relative.w-full class=bg_theme
    / - article = locals[:item]
    header.masthead.pad class=""
        .w-full
            nav class="flex flex-row justify-start items-center mb-4"
                a href="/" title="Home"
                    = inline_svg "easel-logo.svg", class: "logo inline-block h-12 mr-4 w-auto"
                a.separator-arrow.subhead.text-lg.mr-2 href="/#work" title="Work" Work
                span.subhead.text-lg UX
            / h3.text-xl.font-bold.subhead Case Studies
            h1.text-4xl-scale.font-regular.font-serif.leading-none.mb-4 = article.title
            h4.text-lg.font-serif.font-light.italic.mb-12 = (article.subheader.nil? ? nil : article.subheader )
        .max-w-6xl class="flex flex-col lg:flex-row"
            - unless article.intro.nil?
                .w-full class="lg:w-3/4"
                    .lead.markdown.pr-0 class="lg:pr-6"
                        = Kramdown::Document.new(article.intro).to_html
            .w-full class="lg:w-1/4"
                details
                    summary.toc.text-lg.font-serif.opacity-75.mb-4 class="hover:opacity-100" Table of Contents
                    ul.ml-5
                        - article.blocks.each do | block |
                            / li = block.try(:block_title).nil?
                            - if defined?(block.block_title)
                                li.mb-2
                                    a href="##{block.id}" title="Jump to section" = block.block_title
        / - unless article.cover_image.nil?
            .w-full.bg-cover.lozad class="h-64 md:w-1/3 xl:w-1/2 md:h-auto order-1 md:order-2" data-background-image=(article.cover_image.url(w: 1200, fm: :jpg))
                / = partial "partials/inline-picture", :locals => { :the_img => article.cover_image, :classes => 'w-full h-full object-cover' }
        / code = article.to_hash
    - article.blocks.each do | block |
        - case block.item_type.api_key
            - when "image_caption"
                section.content-block.block-image.relative.max-w-7xl.mx-auto.pad id=block.id
                    figure
                        = partial "partials/inline-picture", :locals => { :the_img => block.image, :classes => '' }
                        - unless block.caption.nil?
                            figcaption.mt-12
                                - unless block.block_title.empty?
                                    h3.mx-auto.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                                .markdown.line-length
                                    = Kramdown::Document.new(block.caption).to_html
            - when "gallery_block"
                section.content-block.block-gallery.relative.w-full.pad class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    - unless block.block_title.empty?
                        h3.mx-auto.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                    .gallery-container.mx-auto
                        - unless block.desc.empty?
                            .gallery-item.rounded-none
                                //- code = block.item_type.api_key
                                .text-lg.font-sans.mb-3.pr-3.pb-2.markdown = Kramdown::Document.new(block.desc).to_html
                        - block.gallery.each do | gallery_item |
                            figure.gallery-item
                                img.lozad.zoomable.rounded-scale src=gallery_item.url(w: 1000, blur: 320, auto: :compress) data-src=gallery_item.url(w: 1000, auto: :compress) data-zoom-src=gallery_item.url(w: 2400, auto: :compress) alt="" /
                                - unless gallery_item.nil? && gallery_item.empty?
                                    figcaption class="px-1 py-3 font-sans italic" = gallery_item.title
                            / = partial "partials/gallery-picture", :locals => { :the_img => gallery_item, :classes => '' }
            - when "quote_large"
                aside.content-block.block-quote.relative.w-full.pad-y-xl class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    / code = block.item_type.api_key
                    .text-4xl-scale.font-serif.font-light class=(block.quote_color.nil? ? nil : "text-#{block.quote_color.class_name}") = block.quote_body
            - when "text_block"
                section.content-block.block-text.relative.w-full.pad class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    / code = block.item_type.api_key
                    - unless block.inline_image.nil?
                        .mx-auto.max-w-5xl.flex.justify-center.items-center class="flex-col lg:flex-row"
                            .w-full.mb-4.pb-2 class="lg:w-1/2 lg:pr-12"
                                - unless block.block_title.empty?
                                    h3.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                                .markdown.lead = Kramdown::Document.new(block.block_body).to_html
                            .w-full.mb-4 class="lg:w-1/2"
                                = partial "partials/inline-picture", :locals => { :the_img => block.inline_image, :classes => '' }
                    - else
                        .mx-auto.max-w-2xl
                            - unless block.block_title.empty?
                                h3.text-3xl.font-sans.font-medium.leading-tight.mb-3 = block.block_title
                            .markdown.lead = Kramdown::Document.new(block.block_body).to_html
            - when "video_block"
                section.content-block.block-video.relative.w-full.pad class=(block.theme.nil? ? nil : "bg-#{block.theme.class_name}") id=block.id
                    .mx-auto.max-w-7xl.flex.justify-center.items-center class="flex-col lg:flex-row"
                        - unless block.block_title.empty? || block.video_caption.empty?
                            .w-full.mb-4 class="lg:w-1/3 lg:pr-8"
                                - unless block.block_title.empty?
                                    h3.text-2xl.font-sans.font-medium.leading-tight.mb-2 = block.block_title
                                - unless block.video_caption.empty?
                                    .markdown.lead.max-w-xl = Kramdown::Document.new(block.video_caption).to_html
                        .w-full.mb-4 class="lg:w-2/3"
                            - unless block.video_file.nil?
                                = partial "partials/video-file", :locals => { :video_file => block.video_file, :classes => '', :attr => '' }
                            - else
                                - unless block.video.nil?
                                    / img src=block.video.thumbnail_url
                                    - embed_url = "https://www.youtube.com/embed/" + block.video.provider_uid
                                    .div class="embed-responsive aspect-ratio-16/9"
                                        iframe.embed-responsive-item allow=("accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture") allowfullscreen="" frameborder="0" height=block.video.height src=embed_url width=block.video.width
// .lozad.bg-cover data-background-image="#{article.cover_image.url}?w=1800&h=900&auto=compress&gam=80&exp=-2&sat=0&duotone=2B3652,FF6746&duotone-alpha=100&blur=50&fit=crop&crop=edges"
section.cta-section.mx-auto.text-center.pad class=bg_theme
    = partial "partials/cta"
footer.relative.w-full.pad
    = partial "partials/footer-links"